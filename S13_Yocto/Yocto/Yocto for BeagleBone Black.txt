** Yocto for BeagleBone Black **

# Setup ENV
sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib build-essential chrpath socat cpio python python3 python3-pip python3-pexpect xz-utils debianutils iputils-ping libsdl1.2-dev xterm  zstd liblz4-tool

# Clone poky and layers
git clone git://git.yoctoproject.org/poky  -b kirkstone
git clone git://git.openembedded.org/meta-openembedded -b kirkstone

# Setup build environment
source poky/oe-init-build-env build_b3

# Add layer into build folder
bitbake-layers add-layer ../meta-openembedded
bitbake-layers add-layer ../meta-openembedded/meta-oe
bitbake-layers add-layer ../meta-openembedded/meta-python
bitbake-layers add-layer ../meta-openembedded/meta-networking
bitbake-layers add-layer ../meta-openembedded/meta-multimedia

# Set machine name in local.conf 
	# Open local.conf file
	vim conf/local.conf

	# For Beaglebone, machine variable should be beaglebone-yocto
	MACHINE ??= “beaglebone-yocto”
	
	# Set building parallel. Reference https://docs.yoctoproject.org/1.4/ref-manual/ref-manual.html#var-BB_NUMBER_THREADS
	BB_NUMBER_THREADS = "8"
	PARALLEL_MAKE = "-j8"
	
# Start bitbake to build the image
# 	core-image-base – A console-only image that fully supports the target hardware.
# 	core-image-minimal – A small image allowing the device to just boot.
# 	core-image-sato – An image with Sato support, a mobile environment and visual style that works with mobile devices.
# 	core-image-clutter – An image with support for the OpenGL-based toolkit Clutter
# 	core-image-full-cmdline – A console-only image with more full-featured Linux system functionality installed.
bitbake core-image-minimal


